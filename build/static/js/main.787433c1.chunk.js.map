{"version":3,"sources":["reportWebVitals.js","components/api/api.js","reducers/tags-reducer.js","reducers/redux-store.js","components/tags/tags.js","components/tags/tags-conteiner.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","tagsAPI","get","response","data","TOGGLE_IS_FETCHING","SETTAGS","initialState","tags","tagsOnPage","isFetching","setToggleIsFetching","type","setTags","tagsReducer","state","action","reducers","combineReducers","tagsPage","store","createStore","applyMiddleware","thunkMiddleware","window","Tags","props","contMap","map","el","Item","style","verticalAlign","display","justifyContent","gutter","count","upvotes","name","downvotes","backgroundColor","theme","mode","compose","connect","isAuth","getTags","dispatch","a","Header","Layout","Footer","Content","Sider","Menu","SubMenu","App","color","size","background","rendererer","ReactDOM","render","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.787433c1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\n\n\nconst instance=axios.create({\n    withCredentials:true,\n    baseURL: 'https://hivebot.info/api/v1/',\n    //headers: {'API-KEY' : 'ed386668-28b4-45de-98f4-ed82c5c0ecc4'}\n})\n\nexport const tagsAPI = {\n    getTags(){\n        return instance.get(`tags`)\n            .then(response => { return (response.data)})},\n    postTags(tags){\n    return instance.post(`tags`, tags, {headers:\n            {\"Content-Type\": 'application/json'}\n    })\n        .then(response => {\n            console.log(response);\n            return (response.data)})\n\n    },\n    upTags(id){\n        return instance.put(`tags/up/${id}`, {}, {headers:\n                {\"Content-Type\": 'application/json'}\n        })\n            .then(response => {\n                console.log(response);\n                return (response.data)})\n\n    },\n    downTags(id){\n        return instance.put(`tags/down/${id}`, {}, {headers:\n                {\"Content-Type\": 'application/json'}\n        })\n            .then(response => {\n                console.log(response);\n                return (response.data)})\n\n    }\n}","import {tagsAPI} from \"../components/api/api\";\n\nconst TOGGLE_IS_FETCHING='TOGGLE_IS_FETCHING';\nconst SETTAGS='SETTAGS';\n\nlet initialState = {\n    tags: [],\n    tagsOnPage: 4,\n    isFetching: false\n}\n\nconst tagsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n        case SETTAGS:\n            return {...state, tags: action.tags};\n        default:\n            return state;\n    }\n}\n\n\n\nexport let setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let setTags = (tags) => ({type: SETTAGS, tags});\nexport let getTags = () => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data.tags));\n}}\n\nexport default  tagsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"\nimport tagsReducer from \"./tags-reducer\";\n\nlet reducers = combineReducers({\n    tagsPage: tagsReducer\n})\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\nwindow.store = store;\n\nexport default store;","import React from \"react\";\nimport {Badge, Col, Menu, Row} from \"antd\";\n\nlet Tags = (props) => {\n    debugger\n    let contMap =  props.tags.map( (el)=>{\n        return(\n            <Menu.Item key={el.name} style={{verticalAlign: \"center\", display: 'inline-flex', justifyContent: 'center'}}>\n                <Row style={{ display: 'inline-flex', justifyContent: 'center'}} gutter={[16, 16]} >\n                    <Col >\n                        <Badge count={el.upvotes} />\n                    </Col>\n                    <Col>\n                        {el.name}\n                    </Col>\n                    <Col>\n                        <Badge count={el.downvotes} style={{ verticalAlign: \"center\",  backgroundColor: '#52c41a' }}/>\n                    </Col>\n                </Row>\n            </Menu.Item>\n        )\n    });\n    return(\n        <Menu theme=\"dark\"  mode=\"inline\">\n            {contMap}\n        </Menu>\n    )\n}\n\nexport default Tags;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Tags from \"./tags\";\n\nimport {compose} from \"redux\";\nimport {getTags} from \"../../reducers/tags-reducer\";\n\nconst TagsContainer = (props) => {\n    props.getTags();\n    return (\n        <Tags props={props}/>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    tags: state.tagsPage.tags,\n    isAuth: state.tagsPage.isAuth\n})\n\nexport default compose (\n    connect(mapStateToProps, {\n        getTags\n    }),\n) (TagsContainer);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Button } from 'antd';\nimport { Row, Col } from 'antd';\nimport { Avatar, Image } from 'antd';\nimport TagsContainer from \"./components/tags/tags-conteiner\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nfunction App() {\n  return (\n      <Layout >\n          <Header style={{color:\"white\", justifyContent: 'center'}}>\n              <Row style={{ display: 'inline-flex', justifyContent: 'center'}}>\n                  <Col>\n                      <Avatar size={40}>USER</Avatar>\n                  </Col>\n                  <Col>\n                      Tobi pizda\n                  </Col>\n              </Row>\n          </Header>\n          <Layout>\n              <TagsContainer/>\n          </Layout>\n          <Layout style={{background: \"#141414\"}}>\n              <Row style={{ display: 'inline-flex', justifyContent: 'center'}}>\n                  <Col>\n                      <Button>Up</Button>\n                  </Col>\n                  <Col>\n                      <Button>Down</Button>\n                  </Col>\n              </Row>\n\n          </Layout>\n          <Footer style={{color:\"white\",background: \"#141414\", display: 'inline-flex', justifyContent: 'center'}}>\n              Tobi Pizda\n          </Footer>\n      </Layout>\n  );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./reducers/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport {Provider} from \"react-redux\";\n\n\nexport let rendererer = () => {\n    return(\n        ReactDOM.render(\n            <React.StrictMode>\n                <Provider store={store}>\n                    <App />\n                </Provider>\n            </React.StrictMode>,\n            document.getElementById('root')\n        )\n    )\n}\nstore.subscribe(rendererer);\nrendererer();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}