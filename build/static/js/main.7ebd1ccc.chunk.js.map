{"version":3,"sources":["reportWebVitals.js","components/api/api.js","reducers/tags-reducer.js","reducers/redux-store.js","components/tags/tags.js","components/tags/tags-conteiner.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","tagsAPI","get","response","console","log","data","name","post","headers","id","put","TOGGLE_IS_FETCHING","SETTAGS","SETNAME","initialState","tags","tagsOnPage","isFetching","newName","setToggleIsFetching","type","setTags","tagsReducer","state","action","reducers","combineReducers","tagsPage","store","createStore","applyMiddleware","thunkMiddleware","window","Tags","props","useState","tempValue","setTempValue","contMap","map","el","Item","style","verticalAlign","display","justifyContent","gutter","count","upvotes","downvotes","backgroundColor","theme","mode","onSelect","e","idTag","filter","obj","key","onChange","setName","currentTarget","value","placeholder","onClick","postTag","upTag","downTag","compose","connect","getTags","dispatch","a","useEffect","Header","Layout","Footer","Content","Sider","Menu","SubMenu","App","color","size","background","rendererer","ReactDOM","render","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.7ebd1ccc.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\n\n\nconst instance=axios.create({\n    //withCredentials:true,\n    baseURL:  'https://hivebot.info/api/v1/'//'http://0.0.0.0:5005/api/v1/',\n    //headers: {\"Access-Control-Allow-Origin\": \"*\"}\n})\n\nexport const tagsAPI = {\n    getTags(){\n        return instance.get(`tags` )\n            .then(response => {\n                console.log(response);\n                return (response.data)})},\n    postTag(name){\n    return instance.post(`tags`, {name : name}, {headers:\n            {\"Content-Type\": 'application/json'}\n    })\n        .then(response => {\n            console.log(response);\n            return (response.data)})\n\n    },\n    upTags(id){\n        return instance.put(`tags/up/${id}`, {}, {headers:\n                {\"Content-Type\": 'application/json'}\n        })\n            .then(response => {\n                console.log(response);\n                return (response.data)})\n\n    },\n    downTags(id){\n        return instance.put(`tags/down/${id}`, {}, {headers:\n                {\"Content-Type\": 'application/json'}\n        })\n            .then(response => {\n                console.log(response);\n                return (response.data)})\n\n    }\n}","import {tagsAPI} from \"../components/api/api\";\n\nconst TOGGLE_IS_FETCHING='TOGGLE_IS_FETCHING';\nconst SETTAGS='SETTAGS';\nconst SETNAME='SETNAME';\n\nlet initialState = {\n    tags: [],\n    tagsOnPage: 4,\n    isFetching: false,\n    newName: null\n}\n\nconst tagsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n        case SETTAGS:\n            return {...state, tags: action.tags};\n        case SETNAME:\n            return {...state, newName: action.name};\n        default:\n            return state;\n    }\n}\n\n\n\nexport let setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let setTags = (tags) => ({type: SETTAGS, tags});\nexport let setName = (name) => ({type: SETNAME, name});\nexport let getTags = () => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n}}\nexport let postTag = (name) => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n    let response = await tagsAPI.postTag(name);\n    console.log(response);\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n}}\n\nexport let upTag = (name) => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n    let response = await tagsAPI.upTags(name);\n    console.log(response);\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n}}\n\nexport let downTag = (name) => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n    let response = await tagsAPI.downTags(name);\n    console.log(response);\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n}}\n\nexport default  tagsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"\nimport tagsReducer from \"./tags-reducer\";\n\nlet reducers = combineReducers({\n    tagsPage: tagsReducer\n})\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\nwindow.store = store;\n\nexport default store;","import React, {useState} from \"react\";\nimport {Badge, Button, Col, Input, Layout, Menu, Row} from \"antd\";\n\nlet Tags = (props) => {\n    const [tempValue, setTempValue] = useState(null);\n    let OnChangeName = (e) =>{\n        props.setName(e.currentTarget.value);\n    }\n    let OnClickButton = () => {\n        props.newName && props.postTag(props.newName);\n        props.newName && props.setName('');\n    }\n    let onKeyDown = (e) => {\n        let idTag = (props.tags.filter(obj => {\n            return obj.name === e.key\n        })[0].id);\n        setTempValue(idTag);\n    }\n    let onKeyTagUp = () => {\n        tempValue && props.upTag(tempValue);\n    }\n    let onKeyTagDown = () => {\n        tempValue && props.downTag(tempValue);\n    }\n    let contMap =  props.tags.map( (el)=>{\n        return(\n            <Menu.Item key={el.name} style={{verticalAlign: \"center\", display: 'inline-flex', justifyContent: 'center'}}>\n                <Row style={{ display: 'inline-flex', justifyContent: 'center'}} gutter={[16, 16]} >\n                    <Col >\n                        <Badge count={el.upvotes} />\n                    </Col>\n                    <Col>\n                        {el.name}\n                    </Col>\n                    <Col>\n                        <Badge count={el.downvotes} style={{ verticalAlign: \"center\",  backgroundColor: '#52c41a' }}/>\n                    </Col>\n                </Row>\n            </Menu.Item>\n        )\n    });\n    return(\n        <Menu theme=\"dark\"  mode=\"inline\" justifyContent='center'  onSelect={onKeyDown}>\n            <Row style={{ justifyContent: 'center'}} gutter={[16, 16]} >\n                <Col >\n                    <Input onChange={OnChangeName} value={props.newName}  placeholder=\"Type new coin name\" />\n                </Col>\n                <Col>\n                    <Button onClick={OnClickButton}>+</Button>\n                </Col>\n            </Row>\n            {contMap}\n            <Row style={{justifyContent: 'center'}}>\n                <Col>\n                    <Button onClick={onKeyTagUp}>Up</Button>\n                </Col>\n                <Col>\n                    <Button onClick={onKeyTagDown}>Down</Button>\n                </Col>\n            </Row>\n        </Menu>\n    )\n}\n\nexport default Tags;","import React, {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\nimport Tags from \"./tags\";\n\nimport {compose} from \"redux\";\nimport {downTag, getTags, postTag, setName, upTag} from \"../../reducers/tags-reducer\";\n\nconst TagsContainer = (props) => {\n    useEffect(() => {\n        props.getTags();\n    },[]);\n    return (\n        <Tags setName={props.setName}\n              tags={props.tags}\n              newName={props.newName}\n              postTag={props.postTag}\n              upTag={props.upTag}\n              downTag={props.downTag}\n\n        />\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    tags: state.tagsPage.tags,\n    newName: state.tagsPage.newName\n})\n\nexport default compose (\n    connect(mapStateToProps, {\n        getTags,\n        setName,\n        postTag,\n        upTag,\n        downTag\n    }),\n) (TagsContainer);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nimport { Button } from 'antd';\nimport { Row, Col } from 'antd';\nimport { Avatar, Image } from 'antd';\nimport TagsContainer from \"./components/tags/tags-conteiner\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\nfunction App() {\n  return (\n      <Layout >\n          <Header style={{color:\"white\", justifyContent: 'center'}}>\n              <Row style={{ display: 'inline-flex', justifyContent: 'center'}}>\n                  <Col>\n                      <Avatar size={40}>USER</Avatar>\n                  </Col>\n                  <Col>\n                      Tobi pizda\n                  </Col>\n              </Row>\n          </Header>\n          <Layout>\n              <TagsContainer/>\n          </Layout>\n          <Footer style={{color:\"white\",background: \"#141414\", display: 'inline-flex', justifyContent: 'center'}}>\n              Tobi Pizda\n          </Footer>\n      </Layout>\n  );\n}\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./reducers/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport {Provider} from \"react-redux\";\n\n\nexport let rendererer = () => {\n    return(\n        ReactDOM.render(\n            <React.StrictMode>\n                <Provider store={store}>\n                    <App />\n                </Provider>\n            </React.StrictMode>,\n            document.getElementById('root')\n        )\n    )\n}\nstore.subscribe(rendererer);\nrendererer();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}