{"ast":null,"code":"import { tagsAPI } from \"../components/api/api\";\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst SETTAGS = 'SETTAGS';\nlet initialState = {\n  tags: [],\n  tagsOnPage: 4,\n  isFetching: false\n};\n\nconst tagsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case SETTAGS:\n      return { ...state,\n        tags: action.tags\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport let setToggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport let setTags = tags => ({\n  type: SETTAGS,\n  tags\n});\nexport let getTags = () => {\n  return async dispatch => {\n    dispatch(setToggleIsFetching(true));\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data.tags));\n  };\n};\nexport default tagsReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/PonasProduction/src/reducers/tags-reducer.js"],"names":["tagsAPI","TOGGLE_IS_FETCHING","SETTAGS","initialState","tags","tagsOnPage","isFetching","tagsReducer","state","action","type","setToggleIsFetching","setTags","getTags","dispatch","data"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,uBAAtB;AAEA,MAAMC,kBAAkB,GAAC,oBAAzB;AACA,MAAMC,OAAO,GAAC,SAAd;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,IAAI,EAAE,EADS;AAEfC,EAAAA,UAAU,EAAE,CAFG;AAGfC,EAAAA,UAAU,EAAE;AAHG,CAAnB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,kBAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWF,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAA9B,OAAP;;AACJ,SAAKJ,OAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWJ,QAAAA,IAAI,EAAEK,MAAM,CAACL;AAAxB,OAAP;;AACJ;AACI,aAAOI,KAAP;AANR;AAQH,CATD;;AAaA,OAAO,IAAIG,mBAAmB,GAAIL,UAAD,KAAiB;AAACI,EAAAA,IAAI,EAAET,kBAAP;AAA2BK,EAAAA;AAA3B,CAAjB,CAA1B;AACP,OAAO,IAAIM,OAAO,GAAIR,IAAD,KAAW;AAACM,EAAAA,IAAI,EAAER,OAAP;AAAgBE,EAAAA;AAAhB,CAAX,CAAd;AACP,OAAO,IAAIS,OAAO,GAAG,MAAM;AAAE,SAAO,MAAOC,QAAP,IAAoB;AACpDA,IAAAA,QAAQ,CAACH,mBAAmB,CAAC,IAAD,CAApB,CAAR;AAEA,QAAII,IAAI,GAAG,MAAMf,OAAO,CAACa,OAAR,EAAjB;AACAC,IAAAA,QAAQ,CAACH,mBAAmB,CAAC,KAAD,CAApB,CAAR;AACAG,IAAAA,QAAQ,CAACF,OAAO,CAACG,IAAI,CAACX,IAAN,CAAR,CAAR;AACH,GAN4B;AAM3B,CANK;AAQP,eAAgBG,WAAhB","sourcesContent":["import {tagsAPI} from \"../components/api/api\";\n\nconst TOGGLE_IS_FETCHING='TOGGLE_IS_FETCHING';\nconst SETTAGS='SETTAGS';\n\nlet initialState = {\n    tags: [],\n    tagsOnPage: 4,\n    isFetching: false\n}\n\nconst tagsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n        case SETTAGS:\n            return {...state, tags: action.tags};\n        default:\n            return state;\n    }\n}\n\n\n\nexport let setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let setTags = (tags) => ({type: SETTAGS, tags});\nexport let getTags = () => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data.tags));\n}}\n\nexport default  tagsReducer;"]},"metadata":{},"sourceType":"module"}