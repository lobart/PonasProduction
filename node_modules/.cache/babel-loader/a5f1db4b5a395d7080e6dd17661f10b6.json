{"ast":null,"code":"var _jsxFileName = \"/home/archi/MyProjects/PonasProduction/src/components/tags/tags-conteiner.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Tags from \"./tags\";\nimport { compose } from \"redux\";\nimport { getTags } from \"../../reducers/tags-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagsContainer = props => {\n  props.getTags();\n  return /*#__PURE__*/_jsxDEV(Tags, {\n    props: props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TagsContainer;\n\nlet mapStateToProps = state => ({\n  tags: state.tagsPage.tags,\n  isAuth: state.tagsPage.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getTags\n}))(TagsContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsContainer\");","map":{"version":3,"sources":["/home/archi/MyProjects/PonasProduction/src/components/tags/tags-conteiner.js"],"names":["React","connect","Tags","compose","getTags","TagsContainer","props","mapStateToProps","state","tags","tagsPage","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,OAAR,QAAsB,6BAAtB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE7BA,EAAAA,KAAK,CAACF,OAAN;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,KAAK,EAAEE;AAAb;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAND;;KAAMD,a;;AAQN,IAAIE,eAAe,GAAIC,KAAD,KAAY;AAC9BC,EAAAA,IAAI,EAAED,KAAK,CAACE,QAAN,CAAeD,IADS;AAE9BE,EAAAA,MAAM,EAAEH,KAAK,CAACE,QAAN,CAAeC;AAFO,CAAZ,CAAtB;;AAKA,eAAeR,OAAO,CAClBF,OAAO,CAACM,eAAD,EAAkB;AACrBH,EAAAA;AADqB,CAAlB,CADW,CAAP,CAIZC,aAJY,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Tags from \"./tags\";\n\nimport {compose} from \"redux\";\nimport {getTags} from \"../../reducers/tags-reducer\";\n\nconst TagsContainer = (props) => {\n    \n    props.getTags();\n    return (\n        <Tags props={props}/>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n    tags: state.tagsPage.tags,\n    isAuth: state.tagsPage.isAuth\n})\n\nexport default compose (\n    connect(mapStateToProps, {\n        getTags\n    }),\n) (TagsContainer);\n\n"]},"metadata":{},"sourceType":"module"}