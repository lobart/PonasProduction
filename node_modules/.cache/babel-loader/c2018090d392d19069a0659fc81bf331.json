{"ast":null,"code":"import _regeneratorRuntime from\"/home/archi/MyProjects/PonasProduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/archi/MyProjects/PonasProduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _objectSpread from\"/home/archi/MyProjects/PonasProduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{tagsAPI}from\"../components/api/api\";var TOGGLE_IS_FETCHING='TOGGLE_IS_FETCHING';var SETTAGS='SETTAGS';var initialState={tags:[],tagsOnPage:4,isFetching:false};var tagsReducer=function tagsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case TOGGLE_IS_FETCHING:return _objectSpread(_objectSpread({},state),{},{isFetching:action.isFetching});case SETTAGS:return _objectSpread(_objectSpread({},state),{},{tags:action.tags});default:return state;}};export var setToggleIsFetching=function setToggleIsFetching(isFetching){return{type:TOGGLE_IS_FETCHING,isFetching:isFetching};};export var setTags=function setTags(tags){return{type:SETTAGS,tags:tags};};export var getTags=function getTags(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(setToggleIsFetching(true));_context.next=3;return tagsAPI.getTags();case 3:data=_context.sent;dispatch(setToggleIsFetching(false));dispatch(setTags(data));case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export default tagsReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/PonasProduction/src/reducers/tags-reducer.js"],"names":["tagsAPI","TOGGLE_IS_FETCHING","SETTAGS","initialState","tags","tagsOnPage","isFetching","tagsReducer","state","action","type","setToggleIsFetching","setTags","getTags","dispatch","data"],"mappings":"mdAAA,OAAQA,OAAR,KAAsB,uBAAtB,CAEA,GAAMC,CAAAA,kBAAkB,CAAC,oBAAzB,CACA,GAAMC,CAAAA,OAAO,CAAC,SAAd,CAEA,GAAIC,CAAAA,YAAY,CAAG,CACfC,IAAI,CAAE,EADS,CAEfC,UAAU,CAAE,CAFG,CAGfC,UAAU,CAAE,KAHG,CAAnB,CAMA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CAClD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKT,CAAAA,kBAAL,CACI,sCAAWO,KAAX,MAAkBF,UAAU,CAAEG,MAAM,CAACH,UAArC,GACJ,IAAKJ,CAAAA,OAAL,CACI,sCAAWM,KAAX,MAAkBJ,IAAI,CAAEK,MAAM,CAACL,IAA/B,GACJ,QACI,MAAOI,CAAAA,KAAP,CANR,CAQH,CATD,CAaA,MAAO,IAAIG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACL,UAAD,QAAiB,CAACI,IAAI,CAAET,kBAAP,CAA2BK,UAAU,CAAVA,UAA3B,CAAjB,EAA1B,CACP,MAAO,IAAIM,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACR,IAAD,QAAW,CAACM,IAAI,CAAER,OAAP,CAAgBE,IAAI,CAAJA,IAAhB,CAAX,EAAd,CACP,MAAO,IAAIS,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAAE,+FAAO,iBAAOC,QAAP,2HAChCA,QAAQ,CAACH,mBAAmB,CAAC,IAAD,CAApB,CAAR,CADgC,sBAEfX,CAAAA,OAAO,CAACa,OAAR,EAFe,QAE5BE,IAF4B,eAGhCD,QAAQ,CAACH,mBAAmB,CAAC,KAAD,CAApB,CAAR,CACAG,QAAQ,CAACF,OAAO,CAACG,IAAD,CAAR,CAAR,CAJgC,sDAAP,+DAK3B,CALK,CAOP,cAAgBR,CAAAA,WAAhB","sourcesContent":["import {tagsAPI} from \"../components/api/api\";\n\nconst TOGGLE_IS_FETCHING='TOGGLE_IS_FETCHING';\nconst SETTAGS='SETTAGS';\n\nlet initialState = {\n    tags: [],\n    tagsOnPage: 4,\n    isFetching: false\n}\n\nconst tagsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n        case SETTAGS:\n            return {...state, tags: action.tags};\n        default:\n            return state;\n    }\n}\n\n\n\nexport let setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let setTags = (tags) => ({type: SETTAGS, tags});\nexport let getTags = () => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n}}\n\nexport default  tagsReducer;"]},"metadata":{},"sourceType":"module"}