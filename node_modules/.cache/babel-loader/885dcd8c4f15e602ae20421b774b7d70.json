{"ast":null,"code":"import { tagsAPI } from \"../components/api/api\";\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst SETTAGS = 'SETTAGS';\nconst SETNAME = 'SETNAME';\nlet initialState = {\n  tags: [],\n  tagsOnPage: 4,\n  isFetching: false,\n  newName: null\n};\n\nconst tagsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case SETTAGS:\n      return { ...state,\n        tags: action.tags\n      };\n\n    case SETNAME:\n      return { ...state,\n        newName: action.name\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport let setToggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport let setTags = tags => ({\n  type: SETTAGS,\n  tags\n});\nexport let setName = name => ({\n  type: SETNAME,\n  name\n});\nexport let getTags = () => {\n  return async dispatch => {\n    dispatch(setToggleIsFetching(true));\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n  };\n};\nexport let postTag = name => {\n  return async dispatch => {\n    dispatch(setToggleIsFetching(true));\n    let response = await tagsAPI.postTag(name);\n    console.log(response);\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n  };\n};\nexport let upTag = name => {\n  return async dispatch => {\n    dispatch(setToggleIsFetching(true));\n    let response = await tagsAPI.upTags(name);\n    console.log(response);\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n  };\n};\nexport let downTag = name => {\n  return async dispatch => {\n    dispatch(setToggleIsFetching(true));\n    let response = await tagsAPI.downTags(name);\n    console.log(response);\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n  };\n};\nexport default tagsReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/PonasProduction/src/reducers/tags-reducer.js"],"names":["tagsAPI","TOGGLE_IS_FETCHING","SETTAGS","SETNAME","initialState","tags","tagsOnPage","isFetching","newName","tagsReducer","state","action","type","name","setToggleIsFetching","setTags","setName","getTags","dispatch","data","postTag","response","console","log","upTag","upTags","downTag","downTags"],"mappings":"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","sourcesContent":["import {tagsAPI} from \"../components/api/api\";\n\nconst TOGGLE_IS_FETCHING='TOGGLE_IS_FETCHING';\nconst SETTAGS='SETTAGS';\nconst SETNAME='SETNAME';\n\nlet initialState = {\n    tags: [],\n    tagsOnPage: 4,\n    isFetching: false,\n    newName: null\n}\n\nconst tagsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n        case SETTAGS:\n            return {...state, tags: action.tags};\n        case SETNAME:\n            return {...state, newName: action.name};\n        default:\n            return state;\n    }\n}\n\n\n\nexport let setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let setTags = (tags) => ({type: SETTAGS, tags});\nexport let setName = (name) => ({type: SETNAME, name});\nexport let getTags = () => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n}}\nexport let postTag = (name) => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n    let response = await tagsAPI.postTag(name);\n    console.log(response);\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n}}\n\nexport let upTag = (name) => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n    let response = await tagsAPI.upTags(name);\n    console.log(response);\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n}}\n\nexport let downTag = (name) => { return async (dispatch) => {\n    dispatch(setToggleIsFetching(true));\n    let response = await tagsAPI.downTags(name);\n    console.log(response);\n    let data = await tagsAPI.getTags();\n    dispatch(setToggleIsFetching(false));\n    dispatch(setTags(data));\n}}\n\nexport default  tagsReducer;"]},"metadata":{},"sourceType":"module"}